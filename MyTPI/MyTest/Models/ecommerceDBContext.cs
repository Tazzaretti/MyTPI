// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace MyTest.Models
{
    public partial class ecommerceDBContext : DbContext
    {
        public ecommerceDBContext()
        {
        }

        public ecommerceDBContext(DbContextOptions<ecommerceDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Envios> Envios { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<Variante> Variante { get; set; }
        public virtual DbSet<Ventas> Ventas { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Envios>(entity =>
            {
                entity.HasKey(e => e.IdEnvio)
                    .HasName("PK__Envios__8C48C8CA4923CEE2");

                entity.Property(e => e.IdEnvio)
                    .ValueGeneratedNever()
                    .HasColumnName("id_envio");

                entity.Property(e => e.Destino)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("destino");

                entity.Property(e => e.EstadoEnvio)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("estado_envio");

                entity.Property(e => e.IdProducto).HasColumnName("id_producto");

                entity.Property(e => e.IdVenta).HasColumnName("id_venta");

                entity.HasOne(d => d.IdProductoNavigation)
                    .WithMany(p => p.Envios)
                    .HasForeignKey(d => d.IdProducto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Envios__id_produ__0F2D40CE");

                entity.HasOne(d => d.IdVentaNavigation)
                    .WithMany(p => p.Envios)
                    .HasForeignKey(d => d.IdVenta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Envios__id_venta__10216507");
            });

            modelBuilder.Entity<Productos>(entity =>
            {
                entity.HasKey(e => e.IdProducto)
                    .HasName("PK__Producto__FF341C0D5475195D");

                entity.Property(e => e.IdProducto)
                    .ValueGeneratedNever()
                    .HasColumnName("id_producto");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(255)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Precio)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("precio");

                entity.Property(e => e.Producto)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("producto");
            });

            modelBuilder.Entity<Rol>(entity =>
            {
                entity.HasKey(e => e.IdRol)
                    .HasName("PK__Rol__6ABCB5E05198C882");

                entity.Property(e => e.IdRol)
                    .ValueGeneratedNever()
                    .HasColumnName("id_rol");

                entity.Property(e => e.UserType)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Users>(entity =>
            {
                entity.HasKey(e => e.IdUser)
                    .HasName("PK__Users__D2D14637C17C430A");

                entity.HasIndex(e => e.Mail, "UQ__Users__7A21290425555B0B")
                    .IsUnique();

                entity.Property(e => e.IdUser).HasColumnName("id_user");

                entity.Property(e => e.Apellido)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("apellido");

                entity.Property(e => e.Clave)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("clave");

                entity.Property(e => e.IdRol).HasColumnName("id_rol");

                entity.Property(e => e.Mail)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("mail");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("nombre");

                entity.HasOne(d => d.IdRolNavigation)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.IdRol)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Users__id_rol__09746778");
            });

            modelBuilder.Entity<Variante>(entity =>
            {
                entity.HasKey(e => e.IdVariante)
                    .HasName("PK__Variante__85058CA95646D9CD");

                entity.Property(e => e.IdVariante)
                    .ValueGeneratedNever()
                    .HasColumnName("id_variante");

                entity.Property(e => e.Color)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("color");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("descripcion");
            });

            modelBuilder.Entity<Ventas>(entity =>
            {
                entity.HasKey(e => e.IdVenta)
                    .HasName("PK__Ventas__459533BF50FC65A2");

                entity.Property(e => e.IdVenta)
                    .ValueGeneratedNever()
                    .HasColumnName("id_venta");

                entity.Property(e => e.FechaVenta)
                    .HasColumnType("date")
                    .HasColumnName("fecha_venta");

                entity.Property(e => e.IdUser).HasColumnName("id_user");

                entity.HasOne(d => d.IdUserNavigation)
                    .WithMany(p => p.Ventas)
                    .HasForeignKey(d => d.IdUser)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Ventas__id_user__0C50D423");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}